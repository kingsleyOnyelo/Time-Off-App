{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nvar _validator = _interopRequireDefault(require(\"./validator\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _const = require(\"./const\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar reactInputsValidationCss = {\n  \"ellipsis\": \"react-inputs-validation__ellipsis___3-Api\",\n  \"textbox__wrapper\": \"react-inputs-validation__textbox__wrapper___3tnXv\",\n  \"textbox__container\": \"react-inputs-validation__textbox__container___3KXOM\",\n  \"textbox__input\": \"react-inputs-validation__textbox__input___20hDL\",\n  \"error\": \"react-inputs-validation__error___2aXSp\",\n  \"success\": \"react-inputs-validation__success___3TpwE\",\n  \"disabled\": \"react-inputs-validation__disabled___1-57g\",\n  \"msg\": \"react-inputs-validation__msg___pxv8o\",\n  \"textarea__wrapper\": \"react-inputs-validation__textarea__wrapper___35GhF\",\n  \"textarea__container\": \"react-inputs-validation__textarea__container___2fbGp\",\n  \"textarea__input\": \"react-inputs-validation__textarea__input___1CFm_\",\n  \"radiobox__wrapper\": \"react-inputs-validation__radiobox__wrapper___1zZ30\",\n  \"radiobox__container\": \"react-inputs-validation__radiobox__container___FD4vb\",\n  \"radiobox__input\": \"react-inputs-validation__radiobox__input___2uX2-\",\n  \"radiobox__label\": \"react-inputs-validation__radiobox__label___2tQsB\",\n  \"checked\": \"react-inputs-validation__checked___2O0Ju\",\n  \"radiobox__item\": \"react-inputs-validation__radiobox__item___ejuz1\",\n  \"checkbox__wrapper\": \"react-inputs-validation__checkbox__wrapper___1c1rD\",\n  \"checkbox__input\": \"react-inputs-validation__checkbox__input___1yF4X\",\n  \"checkbox__container\": \"react-inputs-validation__checkbox__container___3I1rX\",\n  \"checkbox__box\": \"react-inputs-validation__checkbox__box___1uj8A\",\n  \"box\": \"react-inputs-validation__box___3E9nu\",\n  \"select__wrapper\": \"react-inputs-validation__select__wrapper___1B4OH\",\n  \"select__input\": \"react-inputs-validation__select__input___3h-P7\",\n  \"select__container\": \"react-inputs-validation__select__container___3jgUR\",\n  \"select__options-item\": \"react-inputs-validation__select__options-item___30yY4\",\n  \"select__options-item-show-cursor\": \"react-inputs-validation__select__options-item-show-cursor___1ZT3b\",\n  \"select__no-mouse\": \"react-inputs-validation__select__no-mouse___2uRg6\",\n  \"select__hover-active\": \"react-inputs-validation__select__hover-active___2z1MQ\",\n  \"active\": \"react-inputs-validation__active___3eZBB\",\n  \"select__options-container-animate\": \"react-inputs-validation__select__options-container-animate___2Rm--\",\n  \"show\": \"react-inputs-validation__show___2NI3u\",\n  \"select__options-container\": \"react-inputs-validation__select__options-container___d54qE\",\n  \"select__dropdown\": \"react-inputs-validation__select__dropdown___11yDr\",\n  \"select__dropdown-icon\": \"react-inputs-validation__select__dropdown-icon___1T5r2\",\n  \"select__dropdown-name\": \"react-inputs-validation__select__dropdown-name___3hghL\",\n  \"select__dropdown-icon-container\": \"react-inputs-validation__select__dropdown-icon-container___2ild-\"\n};\nvar TYPE = 'textbox';\nvar VALIDATE_OPTION_TYPE_LIST = ['string', 'number'];\nvar DEFAULT_MAX_LENGTH = 524288; //  Default value is 524288\n\nvar DEFAULT_AUTO_COMPLETE = 'on'; //  Default value is on\n\nvar getDefaultValidationOption = function getDefaultValidationOption(obj) {\n  var reg = obj.reg,\n      min = obj.min,\n      max = obj.max,\n      type = obj.type,\n      name = obj.name,\n      check = obj.check,\n      length = obj.length,\n      regMsg = obj.regMsg,\n      compare = obj.compare,\n      required = obj.required,\n      showMsg = obj.showMsg,\n      locale = obj.locale,\n      msgOnError = obj.msgOnError,\n      msgOnSuccess = obj.msgOnSuccess,\n      customFunc = obj.customFunc;\n  locale = typeof locale !== 'undefined' ? locale : _const.DEFAULT_LOCALE;\n  reg = typeof reg !== 'undefined' ? reg : '';\n  min = typeof min !== 'undefined' ? min : 0;\n  max = typeof max !== 'undefined' ? max : 0;\n  type = typeof type !== 'undefined' ? type : 'string';\n  name = typeof name !== 'undefined' ? name : '';\n  check = typeof check !== 'undefined' ? check : true;\n  showMsg = typeof showMsg !== 'undefined' ? showMsg : true;\n  length = typeof length !== 'undefined' ? length : 0;\n  regMsg = typeof regMsg !== 'undefined' ? regMsg : '';\n  compare = typeof compare !== 'undefined' ? compare : '';\n  required = typeof required !== 'undefined' ? required : true;\n  msgOnError = typeof msgOnError !== 'undefined' ? msgOnError : '';\n  msgOnSuccess = typeof msgOnSuccess !== 'undefined' ? msgOnSuccess : '';\n  customFunc = typeof customFunc !== 'undefined' ? customFunc : undefined;\n  return {\n    reg: reg,\n    min: min,\n    max: max,\n    type: type,\n    name: name,\n    check: check,\n    length: length,\n    regMsg: regMsg,\n    locale: locale,\n    compare: compare,\n    required: required,\n    showMsg: showMsg,\n    msgOnError: msgOnError,\n    msgOnSuccess: msgOnSuccess,\n    customFunc: customFunc\n  };\n};\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"input\", void 0);\n\n    _this.state = {\n      err: false,\n      msg: '',\n      successMsg: undefined,\n      value: props.value,\n      validate: props.validate\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onKeyUp = _this.onKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.input = React.createRef();\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.input.current && this.props.tabIndex) {\n        this.input.current.setAttribute('tabindex', String(this.props.tabIndex));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.validate !== prevState.validate) {\n        this.check();\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var node = this.input;\n\n      if (node === null) {\n        return;\n      }\n\n      var v = node.current.value;\n\n      if (this.props.maxLength !== '') {\n        if (v.length > Number(this.props.maxLength)) {\n          return;\n        }\n      }\n\n      var _ref = this.props,\n          validationOption = _ref.validationOption;\n\n      var _getDefaultValidation = getDefaultValidationOption(validationOption),\n          type = _getDefaultValidation.type; // FORMAT NUMBER\n\n\n      if (type === VALIDATE_OPTION_TYPE_LIST[1]) {\n        v = String(this.autoFormatNumber(v));\n      }\n\n      var onChange = this.props.onChange;\n      onChange && onChange(v, e);\n\n      if (this.state.err) {\n        this.setState({\n          err: false\n        });\n      } else {\n        this.setState({\n          successMsg: undefined\n        });\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      var onBlur = this.props.onBlur;\n\n      if (onBlur) {\n        this.check();\n        onBlur(e);\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      var onFocus = this.props.onFocus;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(e) {\n      var onKeyUp = this.props.onKeyUp;\n\n      if (onKeyUp) {\n        this.check();\n        onKeyUp(e);\n      }\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var _ref2 = this.props,\n          validationOption = _ref2.validationOption;\n\n      var _getDefaultValidation2 = getDefaultValidationOption(validationOption),\n          reg = _getDefaultValidation2.reg,\n          min = _getDefaultValidation2.min,\n          max = _getDefaultValidation2.max,\n          type = _getDefaultValidation2.type,\n          name = _getDefaultValidation2.name,\n          check = _getDefaultValidation2.check,\n          length = _getDefaultValidation2.length,\n          regMsg = _getDefaultValidation2.regMsg,\n          locale = _getDefaultValidation2.locale,\n          compare = _getDefaultValidation2.compare,\n          required = _getDefaultValidation2.required,\n          msgOnSuccess = _getDefaultValidation2.msgOnSuccess,\n          customFunc = _getDefaultValidation2.customFunc;\n\n      if (!check) {\n        return;\n      }\n\n      if (type) {\n        if (VALIDATE_OPTION_TYPE_LIST.indexOf(type) !== -1) {\n          if (!_message.default[locale] || !_message.default[locale][TYPE]) {\n            console.error(_const.REACT_INPUTS_VALIDATION_CUSTOM_ERROR_MESSAGE_EXAMPLE);\n            return;\n          }\n\n          var _msg = _message.default[locale][TYPE];\n          var node = this.input;\n\n          if (node === null) {\n            return;\n          }\n\n          var _value = val || node.current.value;\n\n          var nameText = name ? name : ''; // CHECK EMPTY\n\n          if (required) {\n            if (_validator.default.empty(_value)) {\n              this.handleCheckEnd(true, _msg.empty(nameText));\n              return;\n            }\n          }\n\n          if (String(_value) !== '') {\n            if (reg) {\n              if (_validator.default['reg'](reg, _value)) {\n                this.handleCheckEnd(true, regMsg !== '' ? regMsg : _msg.invalid(nameText));\n                return;\n              }\n            }\n\n            if (type === VALIDATE_OPTION_TYPE_LIST[0]) {\n              if (min || max) {\n                if (min && max) {\n                  if (String(_value).length < min || String(_value).length > max) {\n                    this.handleCheckEnd(true, _msg.inBetween(nameText)(min)(max));\n                    return;\n                  }\n                } else {\n                  if (min) {\n                    if (String(_value).length < min) {\n                      this.handleCheckEnd(true, _msg.lessThan(nameText)(min));\n                      return;\n                    }\n                  }\n\n                  if (max) {\n                    if (String(_value).length > max) {\n                      this.handleCheckEnd(true, _msg.greaterThan(nameText)(max));\n                      return;\n                    }\n                  }\n                }\n              }\n\n              if (length) {\n                if (String(_value).length !== length) {\n                  this.handleCheckEnd(true, _msg.lengthEqual(nameText)(length));\n                  return;\n                }\n              }\n            }\n\n            if (type === VALIDATE_OPTION_TYPE_LIST[1]) {\n              if (!_validator.default[type](_value)) {\n                this.handleCheckEnd(true, _msg.invalid(nameText));\n                return;\n              }\n\n              if (min || max) {\n                if (min && max) {\n                  if (!_validator.default[type](_value, min, max)) {\n                    this.handleCheckEnd(true, _msg.inBetween(nameText)(min)(max));\n                    return;\n                  }\n                } else {\n                  if (min) {\n                    if (!_validator.default[type](_value, min)) {\n                      this.handleCheckEnd(true, _msg.lessThan(nameText)(min));\n                      return;\n                    }\n                  }\n\n                  if (max) {\n                    if (!_validator.default[type](_value, 0, max)) {\n                      this.handleCheckEnd(true, _msg.greaterThan(nameText)(max));\n                      return;\n                    }\n                  }\n                }\n              }\n\n              if (length) {\n                if (String(_value).length !== length) {\n                  this.handleCheckEnd(true, _msg.lengthEqual(nameText)(length));\n                  return;\n                }\n              }\n            }\n\n            if (compare && compare !== '') {\n              if (_value !== compare) {\n                this.handleCheckEnd(true, _msg.twoInputsNotEqual());\n                return;\n              }\n            }\n          }\n\n          if (customFunc && typeof customFunc === 'function') {\n            var customFuncResult = customFunc(_value);\n\n            if (customFuncResult !== true) {\n              this.handleCheckEnd(true, customFuncResult);\n              return;\n            }\n          }\n\n          if (msgOnSuccess) {\n            this.setState({\n              successMsg: msgOnSuccess\n            });\n          }\n\n          this.handleCheckEnd(false, msgOnSuccess);\n        } else {\n          console.error(\"The valid \".concat(_utils.default.toCamelCase(TYPE)(true), \" \\\"type\\\" options in validationOption are [\").concat(VALIDATE_OPTION_TYPE_LIST.map(function (i) {\n            return i;\n          }), \"]\"));\n        }\n      } else {\n        console.error('Please provide \"type\" in validationOption');\n      }\n    }\n  }, {\n    key: \"autoFormatNumber\",\n    value: function autoFormatNumber(v) {\n      var DOT = '.';\n      var res = '';\n      var hasDot = false;\n      String(v).split('').filter(function (i) {\n        var charCode = i.toLowerCase().charCodeAt(0);\n\n        if (charCode >= 48 && charCode <= 57 || charCode === 46 && !hasDot) {\n          if (charCode === 46) {\n            hasDot = true;\n          }\n\n          res += i;\n        }\n      });\n\n      if (res.length && res[0] === DOT) {\n        res = \"0\".concat(res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"handleCheckEnd\",\n    value: function handleCheckEnd(err, message) {\n      var msg = message;\n      var _ref3 = this.props,\n          validationOption = _ref3.validationOption;\n\n      var _getDefaultValidation3 = getDefaultValidationOption(validationOption),\n          msgOnError = _getDefaultValidation3.msgOnError;\n\n      if (err && msgOnError) {\n        msg = msgOnError;\n      }\n\n      this.setState({\n        err: err,\n        msg: msg\n      });\n      var validationCallback = this.props.validationCallback;\n      validationCallback && validationCallback(err);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref4 = this.props,\n          tabIndex = _ref4.tabIndex,\n          id = _ref4.id,\n          name = _ref4.name,\n          type = _ref4.type,\n          value = _ref4.value,\n          disabled = _ref4.disabled,\n          maxLength = _ref4.maxLength,\n          autoComplete = _ref4.autoComplete,\n          placeholder = _ref4.placeholder,\n          classNameWrapper = _ref4.classNameWrapper,\n          classNameContainer = _ref4.classNameContainer,\n          classNameInput = _ref4.classNameInput,\n          customStyleWrapper = _ref4.customStyleWrapper,\n          customStyleContainer = _ref4.customStyleContainer,\n          customStyleInput = _ref4.customStyleInput,\n          validationOption = _ref4.validationOption;\n      var _this$state = this.state,\n          err = _this$state.err,\n          msg = _this$state.msg,\n          successMsg = _this$state.successMsg;\n      var wrapperClass = \"\".concat(classNameWrapper, \" \").concat(reactInputsValidationCss['textbox__wrapper'], \" \").concat(err && reactInputsValidationCss['error'], \" \").concat(typeof successMsg !== 'undefined' && !err && reactInputsValidationCss['success'], \" \").concat(disabled && reactInputsValidationCss['disabled']);\n      var containerClass = \"\".concat(classNameContainer, \" \").concat(reactInputsValidationCss['textbox__container'], \" \").concat(err && reactInputsValidationCss['error'], \" \").concat(typeof successMsg !== 'undefined' && !err && reactInputsValidationCss['success'], \" \").concat(disabled && reactInputsValidationCss['disabled']);\n      var inputClass = \"\".concat(classNameInput, \" \").concat(reactInputsValidationCss['textbox__input'], \" \").concat(err && reactInputsValidationCss['error'], \" \").concat(typeof successMsg !== 'undefined' && !err && reactInputsValidationCss['success'], \" \").concat(disabled && reactInputsValidationCss['disabled']);\n      var errmsgClass = \"\".concat(reactInputsValidationCss['msg'], \" \").concat(err && reactInputsValidationCss['error']);\n      var successMsgClass = \"\".concat(reactInputsValidationCss['msg'], \" \").concat(!err && reactInputsValidationCss['success']);\n      var msgHtml;\n\n      var _getDefaultValidation4 = getDefaultValidationOption(validationOption),\n          showMsg = _getDefaultValidation4.showMsg;\n\n      if (showMsg && err && msg) {\n        msgHtml = React.createElement(\"div\", {\n          className: errmsgClass\n        }, msg);\n      }\n\n      if (showMsg && !err && typeof successMsg !== 'undefined') {\n        msgHtml = React.createElement(\"div\", {\n          className: successMsgClass\n        }, successMsg);\n      }\n\n      return React.createElement(\"div\", {\n        className: wrapperClass,\n        style: customStyleWrapper\n      }, React.createElement(\"div\", {\n        className: containerClass,\n        style: customStyleContainer\n      }, React.createElement(\"input\", {\n        id: id,\n        name: name,\n        type: type,\n        value: value,\n        disabled: disabled,\n        autoComplete: autoComplete,\n        maxLength: Number(maxLength),\n        onBlur: this.onBlur,\n        onKeyUp: this.onKeyUp,\n        onFocus: this.onFocus,\n        className: inputClass,\n        onChange: this.onChange,\n        style: customStyleInput,\n        placeholder: placeholder,\n        ref: this.input\n      })), msgHtml);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.validate !== prevState.validate) {\n        return {\n          validate: nextProps.validate\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n_defineProperty(Index, \"defaultProps\", {\n  tabIndex: undefined,\n  id: '',\n  name: '',\n  type: 'text',\n  value: '',\n  disabled: false,\n  validate: false,\n  autoComplete: DEFAULT_AUTO_COMPLETE,\n  maxLength: DEFAULT_MAX_LENGTH,\n  placeholder: '',\n  classNameInput: '',\n  classNameWrapper: '',\n  classNameContainer: '',\n  customStyleInput: {},\n  customStyleWrapper: {},\n  customStyleContainer: {},\n  validationOption: {},\n  onChange: function onChange() {}\n});\n\nvar _default = Index;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}